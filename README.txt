録画したtsファイルをエンコードするためのバッチの詰め合わせです。

全体的な流れは
1. 録画したtsファイル(例: hoge.ts)をMurdocCutterで分割しCMカットし、
1カット1ファイルで番号順に保存 
(例: hoge/01.ts, hoge/02.ts ...)

2. makegop.rb で AviUtl用GOPリストを作る

3. AviUtlで音声なしでx264を用いてエンコード。
この時の出力先は同じフォルダ,同じファイル名で拡張子のみを変更する。
(例: hoge/01.ts -> hoge/01.mp4)

4. makemp4.rb で音声と結合しチャプターも結合。
一応二重音声にも対応しているが音声に名前はつけられない。

となっています。

以下、ファイル説明

--------------------------------------------------------------------------------
config.yml
--------------------------------------------------------------------------------
設定ファイルです。
初期状態では作成されていないため、以下テンプレートに従って作成して下さい。

## YAML Template.
---

# 実行ファイル
:MME: "C:/Program Files (x86)/aviutl/mme.exe"
:BTD: "C:/Program Files (x86)/BonTsDemuxC.exe"
:C2A: "C:/Program Files (x86)/Caption2Ass_PCR.exe"
:M4B: 'C:/Program Files (x86)/GPAC/MP4Box.exe'
# mp4出力先
:dest: hoge
# 一時ファイル保管位置
:temp: huga

--------------------------------------------------------------------------------
makegop.rb
--------------------------------------------------------------------------------
AviUtlでtsを編集する時に必要なGOPリストを予め生成しておき、
ファイルを読み込むたびにGOPリスト生成待ちにさらされるストレスを軽減します。

--------------------------------------------------------------------------------
makemp4.rb
--------------------------------------------------------------------------------
エンコード後の結合処理用スクリプトです。

起動時に入力したフォルダ以下にあるtsファイルと同名のmp4ファイルのペアを検索し、
それぞれに対してtsファイルから字幕と音声を抽出しmp4ファイルと結合した後,

ファイル名が 01-2.mp4, 2-3.mp4 のような <index1>-<index2> 形式のファイルは
<index1>でまとめて<index2>の順で結合し、
出力先/tsとmp4の格納フォルダ名/<index1>.mp4
の形式でファイル名をつけ出力します。

ファイル名が 0.mp4, 03.mp4 のような <index1> 形式のファイルは
フォルダ内でまとめて<index1>の順で結合し、
出力先/tsとmp4の格納フォルダ名.mp4
の形式でファイル名をつけ出力します。

例えば、
出力先(:dest)が hoge/
起動時に入力したフォルダが foo/
fooに格納されているファイルが

bar/01-1.mp4
bar/01-1.ts
bar/01-2.mp4
bar/01-2.ts
bar/02-1.mp4
bar/02-1.ts
bar/1.mp4
bar/1.ts
bar/2.mp4
bar/2.ts
bar/03.mp4
bar/03.ts
bar/baz/4-1.mp4
bar/baz/4-1.ts
bar/baz/4-2.mp4
bar/baz/4-2.ts

なら、出力されるファイルは

hoge/bar/01.mp4
[  bar/01-1.mp4 -> bar/01-2.mp4 ]

hoge/bar/02.mp4
[ bar/02-1.mp4 ]

hoge/bar.mp4
[ bar/1.mp4 -> bar/2.mp4 -> bar/03.mp4 ]

hoge/bar/baz/4.mp4
[ bar/baz/4-1.mp4 -> bar/baz/4-2.mp4 ]

となります。
[]の中身は結合の順番です。


